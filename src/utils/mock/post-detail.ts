export const postDetail =
  "<br/><h1 style='font-size: 18px; font-weight: 700;'>Por que e pra que usar Reactjs?</h1> <br/> <p>Lucas Lima 09/Julho/2022</p><br/><p>Se você já está inserido no mercado de programação há algum tempo, sabe que há uma grande diversidade de artifícios e ferramentas cujos objetivos são descomplicar processos muito complexos e poupar tempo na hora de desenvolver projetos.</p><p>Entre estas ferramentas estão as <strong>bibliotecas</strong> e os <strong>frameworks</strong>.</p><br/><p>Enquanto uma biblioteca pode ser entendida como um conjunto de funções organizadas que podem ser utilizadas para a construção de uma aplicação, os frameworks são uma espécie de base padronizada para o desenvolvimento delas.</p><br/><p>No artigo de hoje, falaremos sobre o React: a biblioteca front-end de JavaScript mais popular do mercado para o desenvolvimento de interfaces de usuário (UI).</p><br/><p>Descubra o que é o React, como ele funciona, para que é utilizado e saiba como aprender a utilizar esta tecnologia.</p><br/><p>Vamos lá?</p><br/><h1 style='font-size: 18px; font-weight: 700;'>O que é React?</h1><p>React JS é uma biblioteca JavaScript para a criação de interfaces de usuário — ou UI (user interface).</p><br/><p>Criado em 2011 pelo time do Facebook, o React surgiu com o objetivo de otimizar a atualização e a sincronização de atividades simultâneas no feed de notícias da rede social, entre eles chat, status, listagem de contatos e outros.</p><br/><p>A princípio, todas essas atividades, chamadas de estados, tinham uma descrição muito complexa. Com o React, esta descrição torna-se mais simples, bem como também é simplificada a conexão entre HTML, CSS e JavaScript e todos os componentes de uma página.</p><br/><p>Por ter demonstrado grande eficiência, nos anos que se seguiram o React foi incorporado à interface de outras redes sociais do grupo, como o Instagram e, em 2013, seu código foi aberto à comunidade, dando início a sua popularização.</p><br/><p>Hoje, o React é uma das mais prestigiadas bibliotecas de JavaScript do mercado.</p><br/><p>Como funciona o React?</p><br/><p>O React é uma biblioteca front-end e tem como um de seus objetivos facilitar a conexão entre diferentes partes de uma página, portanto seu funcionamento acontece através do que chamamos de componentes.</p><br/><p>Em outras palavras, podemos imaginar que o React divide uma tela em diversos componentes para, então, trabalhar sobre eles de maneira individual.</p><br/><p>Os componentes são utilizados para reaproveitamento de código e padronização de interface.</p><br/><p>Isso torna o React uma tecnologia muito flexível para a solução de problemas e para a construção de interfaces reutilizáveis, uma vez que cada um destes componentes pode ser manipulado de maneira distinta.</p><br/><h1 style='font-size: 18px; font-weight: 700;'>Como funciona o React?</h1><br/><p>O React é uma biblioteca front-end e tem como um de seus objetivos facilitar a conexão entre diferentes partes de uma página, portanto seu funcionamento acontece através do que chamamos de componentes.</p><br/><p>Em outras palavras, podemos imaginar que o React divide uma tela em diversos componentes para, então, trabalhar sobre eles de maneira individual.</p><br/><p>Os componentes são utilizados para reaproveitamento de código e padronização de interface.</p><br/><p>Isso torna o React uma tecnologia muito flexível para a solução de problemas e para a construção de interfaces reutilizáveis, uma vez que cada um destes componentes pode ser manipulado de maneira distinta.</p><br/><h1 style='font-size: 18px; font-weight: 700;'>Como o React usa JavaScript?</h1><br/><p>O React é uma biblioteca que utiliza a linguagem de programação JavaScript.</p><br/><p>O JS é uma das mais versáteis e populares linguagens de programação do mundo e conta com um grande número de bibliotecas e outras tecnologias que a utilizam. Entre elas, Node.js, Angular, VueJS, jQuery, Ember.js e, é claro, o React.</p><br/><p>Por essa razão, se você quer aprender a manipular esta biblioteca e extrair dela todo o seu potencial, é preciso antes ter uma sólida base de conhecimento em JavaScript, bem como em suas outras duas linguagens de marcação: HTML e CSS.</p><br/><p>Isso porque o React utiliza uma extensão alternativa ao JavaScript para descrever seus componentes. Esta sintaxe é chamada de JSX.</p><br/><p>O JSX, a grosso modo, é uma linguagem desenvolvida como uma mistura de HTML e JS. Seu objetivo é ser transposta para JS da maneira mais simplificada possível.</p><br/><h1 style='font-size: 18px; font-weight: 700;'>Qual a diferença entre React e React Native?</h1><br/><p>Esta é uma dúvida muito comum para quem ainda é novato no universo de front-end, JavaScript e seus recursos.</p><br/><p>O React é uma biblioteca criada para construir telas de forma declarativa. Ou seja: o React cria aplicações web para serem executadas em navegadores, sejam eles para desktop, mobile ou qualquer outro dispositivo.</p><br/><p>Para que essas aplicações possam ser transpostas para diferentes dispositivos, algumas bibliotecas são utilizadas — e o React Native é uma delas.</p><br/><p>O React Native é a biblioteca voltada para a criação de aplicativos mobile em Android e iOS.</p><br/><p>Em suma, a diferença entre React e React Native é que o primeiro diz respeito à maneira geral com que a biblioteca trabalha, enquanto o segundo traduz o JavaScript para a linguagem nativa do dispositivo, tanto para iOS quanto para Android.</p><br/><h1 style='font-size: 18px; font-weight: 700;'>Características do React</h1><br/><p>Sendo criado para simplificar um processo complexo, o React tem como uma de suas principais características a acessibilidade com que ele é compreendido.</p><br/><p>Para os iniciantes em programação, esta com certeza é uma das mais úteis bibliotecas a ser estudada.</p><br/><p>Listarei abaixo alguns elementos importantes em sua composição e quais as suas funções.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>Componentes</h2><br/><p>O uso de componentes é um dos pilares de sustentação do React.</p><br/><p>Para compreender e agir sobre uma determinada página, o React a quebra em pequenos pedaços, chamados de componentes, e os isola, sendo cada um deles independentes entre si perante a tecnologia.</p><br/><p>Estes componentes são reutilizáveis e, uma vez categorizados, podem ser reaproveitados em quaisquer páginas de um site ou aplicativo.</p><br/><p>Os componentes de uma página podem ser organizados, por exemplo, em BarraLateral, MenuSuperior, BotaoChamada, ou da maneira que o programador preferir.</p><br/><p>Os componentes podem ser comparados às funções em JavaScript.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>Props (properties)</h2><br/><p>Dentro dos componentes estão as propriedades, ou props. Estas props são objetos com várias informações que podem ser de variados tipos, como função, número ou string.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>State (estado)</h2><br/><p>Assim como as propriedades, os estados, ou states, também são objetos ou informações, mas ao invés de serem passadas para o componente, eles são criados dentro do componente.</p><br/><p>Diferentemente das propriedades, os states são mutáveis, como por exemplo variáveis declaradas dentro de uma função.</p><br/><p>Virtual DOM</p><br/><p>O Virtual DOM, ou VDOM, é uma representação em memória de um DOM (Document Object Model) real de uma interface.</p><br/><p>Na prática, DOM real é a estrutura que representa a camada visual de uma página.</p><br/><p>Para que fique mais claro, imagine o seguinte processo:</p><br/><p>Para atualizar uma página, o React primeiro salva suas alterações em memória, ou seja, em um ambiente chamado de Virtual DOM. Isso acontece porque manipular um DOM virtual é muito mais rápido do que manipular um DOM real — ou seja, a página que está sendo atualizada.</p><br/><p>Em front-end, a atualização de DOMs é extremamente corriqueira, uma vez que é através deles que as páginas de um site ou aplicativo são efetivamente atualizadas.</p><br/><p>Após criada esta estrutura virtual, o React a traduz para a tela real com o mínimo de processos possível, trazendo mais agilidade para a atualização. Este processo é chamado de reconciliação.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>JSX</h2><br/><p>Como citado acima, o JSX é uma sintaxe muito parecida com HTML, mas com elementos de JS.</p><br/><p>Todos os componentes do React são descritos com o JSX, então se você pretende trabalhar com o React e todo o seu universo de possibilidades, é necessário aprender antes a compreender o JSX.</p><br/><p>A boa notícia é que esta sintaxe é muito simples de ser assimilada!</p><br/><h2 style='font-size: 16px; font-weight: 700;'>Onde o React é usado?<h2/><br/><p>Por ser voltado exclusivamente à criação de UIs, o React é usado somente em front-end.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>Por que usar React?</h2><p>Se você ainda não está convencido de que esta é uma biblioteca extremamente versátil e de que vale a pena investir em conhecê-la, listarei abaixo algumas vantagens relacionadas ao React.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>1. Fácil de escrever</h2><br/><p>HTML e JavaScript costumam estar entre as primeiras linguagens que um jovem desenvolvedor se dedicou a aprender.</p><br/><p>Isso porque a primeira é uma simples linguagem de marcação utilizada com facilidade até mesmo por quem não é programador; e a segunda é uma das linguagens de programação mais indicadas para o estudo da lógica de programação, estando frequentemente no topo da lista de tecnologias aprendidas por estudantes.</p><br/><p>A junção destas duas linguagens deu origem ao JSX, extensão com a qual todos os componentes do React são descritos.</p><br/><p>Escrever códigos em JSX é um dos maiores benefícios do React: é simples e rápido.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>2. Fácil de usar</h2><br/><p>Assim como o React é simples de ser escrito e compreendido, ele também é muito fácil de ser utilizado.</p><br/><p>Um programador jovem com uma boa base de conhecimento em JavaScript já é capaz de manipular React com desempenho satisfatório em pouquíssimo tempo.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>3. Melhor desempenho com Virtual DOM</h2><br/><p>A utilização do Virtual DOM pelo React é capaz de driblar diversos problemas relacionados à complexidade dos processos pelos quais as telas reais geralmente são atualizadas na web.</p><br/><p>Com esta biblioteca o desempenho do VDOM é otimizado e a atualização é muito mais rápida. Afinal, foi justamente com este propósito que a tecnologia foi criada pelo time do Facebook.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>4. Amigável para SEO</h2><br/><p>Um grande bônus do React é que ele é mais amigável para SEO do que outras bibliotecas JavaScript.</p><br/><p>Se você tem um e-commerce ou vende algum tipo de serviço pela internet, sabe como a otimização de sites para mecanismos de busca é importante, e ao utilizar o React na sua interface você conta com soluções que podem tornar o trabalho de SEO mais fácil, como o Next.js e Gatsby.</p><br/><p>Outro motivo que o torna mais  a atualização rápida auxiliada pelo Virtual DOM. Quanto mais rápido um site carrega para seu usuário, melhor a sua performance em UX e, por consequência, melhor será seu posicionamento nos rankings de pesquisa.</p><br/><h2 style='font-size: 16px; font-weight: 700;'>Casos de Uso</h2><br/><p>Seguindo o exemplo do Facebook, seu criador, o React é utilizado por outras redes do grupo, como Instagram e WhatsApp.</p><br/><p>Demais sites e empresas que possuem suas interfaces digitais construídas com React.JS são:</p><br/><ul style='padding-bottom: 108px'><li>Dropbox</li><li>Tesla</li><li>Airbnb</li><li>Netflix</li><li>Buscapé</li><li>Hotmart</li><li>iFood</li><li>Reddit</li><li>BBC</li><li>Cloudfarem entre outros.</li></ul>";
